FROM resin/intel-nuc-debian

# Enable systemd init system in container
ENV INITSYSTEM on

# Install system-level dependencies
RUN apt-get -q update && apt-get install -yq --no-install-recommends \
  build-essential \
  curl \
  libtbb-dev \
  libboost-all-dev \
  libopenblas-dev \
  liblapack-dev \
  cmake \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install OpenCV
WORKDIR /usr/src
ENV OPENCV_VERSION 3.1.0
RUN curl -SLo opencv-${OPENFACE_VERSION} https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.tar.gz && \
tar xf ${OPENCV_VERSION}.tar.gz && \
cd opencv-${OPENCV_VERSION} && \
mkdir build && \
cd build && \
cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_TBB=ON -DBUILD_SHARED_LIBS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_TESTS=OFF .. && \
make -j$(grep -c processor /proc/cpuinfo) install && \
cd .. && rm -rf opencv-${OPENCV_VERSION}*

# Install dlib
WORKDIR /usr/src
ENV DLIB_VERSION 19.4
RUN curl -SLO http://dlib.net/files/dlib-${DLIB_VERSION}.tar.bz2 && \
tar xf dlib-${DLIB_VERSION}.tar.gz && \
cd dlib-${DLIB_VERSION} && \
mkdir build && \
cd build && \
cmake -DUSE_AVX_INSTRUCTIONS=ON -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
make -j$(grep -c processor /proc/cpuinfo) install && \
cd .. && rm -rf dlib-${DLIB_VERSION}*

# Install OpenFace
WORKDIR /usr/src
ENV OPENFACE_VERSION 688f1ab
RUN curl -SLo openface-${OPENFACE_VERSION} https://github.com/TadasBaltrusaitis/OpenFace/archive/${OPENFACE_VERSION}.tar.gz && \
tar xf openface-${OPENFACE_VERSION}.tar.gz && \
cd openface && \
mkdir build && \
cd build && \
cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
make -j$(grep -c processor /proc/cpuinfo) install && \
cd .. && rm -rf openface-${OPENFACE_VERSION}*

COPY . /usr/src/app
WORKDIR /usr/src/app
RUN ./build.sh
# RUN g++ -o hello hello.cpp

CMD ./run.sh
